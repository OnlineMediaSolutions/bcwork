// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("BidCashings", testBidCashings)
	t.Run("CompassPublisherTags", testCompassPublisherTags)
	t.Run("Competitors", testCompetitors)
	t.Run("Confiants", testConfiants)
	t.Run("Configurations", testConfigurations)
	t.Run("DemandDailies", testDemandDailies)
	t.Run("DemandHourlies", testDemandHourlies)
	t.Run("DemandParnterPlacements", testDemandParnterPlacements)
	t.Run("DemandPartners", testDemandPartners)
	t.Run("DemandPartnerDailies", testDemandPartnerDailies)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourlies)
	t.Run("Dpos", testDpos)
	t.Run("DpoAutomationLogs", testDpoAutomationLogs)
	t.Run("DpoRules", testDpoRules)
	t.Run("Factors", testFactors)
	t.Run("Floors", testFloors)
	t.Run("GlobalFactors", testGlobalFactors)
	t.Run("Histories", testHistories)
	t.Run("ID5Testings", testID5Testings)
	t.Run("IiqDailies", testIiqDailies)
	t.Run("IiqHourlies", testIiqHourlies)
	t.Run("IiqTestings", testIiqTestings)
	t.Run("ImpressionLogDailies", testImpressionLogDailies)
	t.Run("ImpressionLogHourlies", testImpressionLogHourlies)
	t.Run("LoopingRatios", testLoopingRatios)
	t.Run("MetadataInstances", testMetadataInstances)
	t.Run("MetadataQueues", testMetadataQueues)
	t.Run("NBDemandHourlies", testNBDemandHourlies)
	t.Run("NBSupplyHourlies", testNBSupplyHourlies)
	t.Run("Pixalates", testPixalates)
	t.Run("PriceFactorLogs", testPriceFactorLogs)
	t.Run("Publishers", testPublishers)
	t.Run("PublisherDailies", testPublisherDailies)
	t.Run("PublisherDemands", testPublisherDemands)
	t.Run("PublisherDomains", testPublisherDomains)
	t.Run("PublisherHourlies", testPublisherHourlies)
	t.Run("PublisherSyncs", testPublisherSyncs)
	t.Run("ReportUpdates", testReportUpdates)
	t.Run("RevenueDailies", testRevenueDailies)
	t.Run("RevenueHourlies", testRevenueHourlies)
	t.Run("SchemaMigrations", testSchemaMigrations)
	t.Run("SellersJSONHistories", testSellersJSONHistories)
	t.Run("Targetings", testTargetings)
	t.Run("Users", testUsers)
}

func TestDelete(t *testing.T) {
	t.Run("BidCashings", testBidCashingsDelete)
	t.Run("CompassPublisherTags", testCompassPublisherTagsDelete)
	t.Run("Competitors", testCompetitorsDelete)
	t.Run("Confiants", testConfiantsDelete)
	t.Run("Configurations", testConfigurationsDelete)
	t.Run("DemandDailies", testDemandDailiesDelete)
	t.Run("DemandHourlies", testDemandHourliesDelete)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsDelete)
	t.Run("DemandPartners", testDemandPartnersDelete)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesDelete)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesDelete)
	t.Run("Dpos", testDposDelete)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsDelete)
	t.Run("DpoRules", testDpoRulesDelete)
	t.Run("Factors", testFactorsDelete)
	t.Run("Floors", testFloorsDelete)
	t.Run("GlobalFactors", testGlobalFactorsDelete)
	t.Run("Histories", testHistoriesDelete)
	t.Run("ID5Testings", testID5TestingsDelete)
	t.Run("IiqDailies", testIiqDailiesDelete)
	t.Run("IiqHourlies", testIiqHourliesDelete)
	t.Run("IiqTestings", testIiqTestingsDelete)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesDelete)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesDelete)
	t.Run("LoopingRatios", testLoopingRatiosDelete)
	t.Run("MetadataInstances", testMetadataInstancesDelete)
	t.Run("MetadataQueues", testMetadataQueuesDelete)
	t.Run("NBDemandHourlies", testNBDemandHourliesDelete)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesDelete)
	t.Run("Pixalates", testPixalatesDelete)
	t.Run("PriceFactorLogs", testPriceFactorLogsDelete)
	t.Run("Publishers", testPublishersDelete)
	t.Run("PublisherDailies", testPublisherDailiesDelete)
	t.Run("PublisherDemands", testPublisherDemandsDelete)
	t.Run("PublisherDomains", testPublisherDomainsDelete)
	t.Run("PublisherHourlies", testPublisherHourliesDelete)
	t.Run("PublisherSyncs", testPublisherSyncsDelete)
	t.Run("ReportUpdates", testReportUpdatesDelete)
	t.Run("RevenueDailies", testRevenueDailiesDelete)
	t.Run("RevenueHourlies", testRevenueHourliesDelete)
	t.Run("SchemaMigrations", testSchemaMigrationsDelete)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesDelete)
	t.Run("Targetings", testTargetingsDelete)
	t.Run("Users", testUsersDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("BidCashings", testBidCashingsQueryDeleteAll)
	t.Run("CompassPublisherTags", testCompassPublisherTagsQueryDeleteAll)
	t.Run("Competitors", testCompetitorsQueryDeleteAll)
	t.Run("Confiants", testConfiantsQueryDeleteAll)
	t.Run("Configurations", testConfigurationsQueryDeleteAll)
	t.Run("DemandDailies", testDemandDailiesQueryDeleteAll)
	t.Run("DemandHourlies", testDemandHourliesQueryDeleteAll)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsQueryDeleteAll)
	t.Run("DemandPartners", testDemandPartnersQueryDeleteAll)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesQueryDeleteAll)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesQueryDeleteAll)
	t.Run("Dpos", testDposQueryDeleteAll)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsQueryDeleteAll)
	t.Run("DpoRules", testDpoRulesQueryDeleteAll)
	t.Run("Factors", testFactorsQueryDeleteAll)
	t.Run("Floors", testFloorsQueryDeleteAll)
	t.Run("GlobalFactors", testGlobalFactorsQueryDeleteAll)
	t.Run("Histories", testHistoriesQueryDeleteAll)
	t.Run("ID5Testings", testID5TestingsQueryDeleteAll)
	t.Run("IiqDailies", testIiqDailiesQueryDeleteAll)
	t.Run("IiqHourlies", testIiqHourliesQueryDeleteAll)
	t.Run("IiqTestings", testIiqTestingsQueryDeleteAll)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesQueryDeleteAll)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesQueryDeleteAll)
	t.Run("LoopingRatios", testLoopingRatiosQueryDeleteAll)
	t.Run("MetadataInstances", testMetadataInstancesQueryDeleteAll)
	t.Run("MetadataQueues", testMetadataQueuesQueryDeleteAll)
	t.Run("NBDemandHourlies", testNBDemandHourliesQueryDeleteAll)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesQueryDeleteAll)
	t.Run("Pixalates", testPixalatesQueryDeleteAll)
	t.Run("PriceFactorLogs", testPriceFactorLogsQueryDeleteAll)
	t.Run("Publishers", testPublishersQueryDeleteAll)
	t.Run("PublisherDailies", testPublisherDailiesQueryDeleteAll)
	t.Run("PublisherDemands", testPublisherDemandsQueryDeleteAll)
	t.Run("PublisherDomains", testPublisherDomainsQueryDeleteAll)
	t.Run("PublisherHourlies", testPublisherHourliesQueryDeleteAll)
	t.Run("PublisherSyncs", testPublisherSyncsQueryDeleteAll)
	t.Run("ReportUpdates", testReportUpdatesQueryDeleteAll)
	t.Run("RevenueDailies", testRevenueDailiesQueryDeleteAll)
	t.Run("RevenueHourlies", testRevenueHourliesQueryDeleteAll)
	t.Run("SchemaMigrations", testSchemaMigrationsQueryDeleteAll)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesQueryDeleteAll)
	t.Run("Targetings", testTargetingsQueryDeleteAll)
	t.Run("Users", testUsersQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("BidCashings", testBidCashingsSliceDeleteAll)
	t.Run("CompassPublisherTags", testCompassPublisherTagsSliceDeleteAll)
	t.Run("Competitors", testCompetitorsSliceDeleteAll)
	t.Run("Confiants", testConfiantsSliceDeleteAll)
	t.Run("Configurations", testConfigurationsSliceDeleteAll)
	t.Run("DemandDailies", testDemandDailiesSliceDeleteAll)
	t.Run("DemandHourlies", testDemandHourliesSliceDeleteAll)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsSliceDeleteAll)
	t.Run("DemandPartners", testDemandPartnersSliceDeleteAll)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesSliceDeleteAll)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesSliceDeleteAll)
	t.Run("Dpos", testDposSliceDeleteAll)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsSliceDeleteAll)
	t.Run("DpoRules", testDpoRulesSliceDeleteAll)
	t.Run("Factors", testFactorsSliceDeleteAll)
	t.Run("Floors", testFloorsSliceDeleteAll)
	t.Run("GlobalFactors", testGlobalFactorsSliceDeleteAll)
	t.Run("Histories", testHistoriesSliceDeleteAll)
	t.Run("ID5Testings", testID5TestingsSliceDeleteAll)
	t.Run("IiqDailies", testIiqDailiesSliceDeleteAll)
	t.Run("IiqHourlies", testIiqHourliesSliceDeleteAll)
	t.Run("IiqTestings", testIiqTestingsSliceDeleteAll)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesSliceDeleteAll)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesSliceDeleteAll)
	t.Run("LoopingRatios", testLoopingRatiosSliceDeleteAll)
	t.Run("MetadataInstances", testMetadataInstancesSliceDeleteAll)
	t.Run("MetadataQueues", testMetadataQueuesSliceDeleteAll)
	t.Run("NBDemandHourlies", testNBDemandHourliesSliceDeleteAll)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesSliceDeleteAll)
	t.Run("Pixalates", testPixalatesSliceDeleteAll)
	t.Run("PriceFactorLogs", testPriceFactorLogsSliceDeleteAll)
	t.Run("Publishers", testPublishersSliceDeleteAll)
	t.Run("PublisherDailies", testPublisherDailiesSliceDeleteAll)
	t.Run("PublisherDemands", testPublisherDemandsSliceDeleteAll)
	t.Run("PublisherDomains", testPublisherDomainsSliceDeleteAll)
	t.Run("PublisherHourlies", testPublisherHourliesSliceDeleteAll)
	t.Run("PublisherSyncs", testPublisherSyncsSliceDeleteAll)
	t.Run("ReportUpdates", testReportUpdatesSliceDeleteAll)
	t.Run("RevenueDailies", testRevenueDailiesSliceDeleteAll)
	t.Run("RevenueHourlies", testRevenueHourliesSliceDeleteAll)
	t.Run("SchemaMigrations", testSchemaMigrationsSliceDeleteAll)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesSliceDeleteAll)
	t.Run("Targetings", testTargetingsSliceDeleteAll)
	t.Run("Users", testUsersSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("BidCashings", testBidCashingsExists)
	t.Run("CompassPublisherTags", testCompassPublisherTagsExists)
	t.Run("Competitors", testCompetitorsExists)
	t.Run("Confiants", testConfiantsExists)
	t.Run("Configurations", testConfigurationsExists)
	t.Run("DemandDailies", testDemandDailiesExists)
	t.Run("DemandHourlies", testDemandHourliesExists)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsExists)
	t.Run("DemandPartners", testDemandPartnersExists)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesExists)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesExists)
	t.Run("Dpos", testDposExists)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsExists)
	t.Run("DpoRules", testDpoRulesExists)
	t.Run("Factors", testFactorsExists)
	t.Run("Floors", testFloorsExists)
	t.Run("GlobalFactors", testGlobalFactorsExists)
	t.Run("Histories", testHistoriesExists)
	t.Run("ID5Testings", testID5TestingsExists)
	t.Run("IiqDailies", testIiqDailiesExists)
	t.Run("IiqHourlies", testIiqHourliesExists)
	t.Run("IiqTestings", testIiqTestingsExists)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesExists)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesExists)
	t.Run("LoopingRatios", testLoopingRatiosExists)
	t.Run("MetadataInstances", testMetadataInstancesExists)
	t.Run("MetadataQueues", testMetadataQueuesExists)
	t.Run("NBDemandHourlies", testNBDemandHourliesExists)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesExists)
	t.Run("Pixalates", testPixalatesExists)
	t.Run("PriceFactorLogs", testPriceFactorLogsExists)
	t.Run("Publishers", testPublishersExists)
	t.Run("PublisherDailies", testPublisherDailiesExists)
	t.Run("PublisherDemands", testPublisherDemandsExists)
	t.Run("PublisherDomains", testPublisherDomainsExists)
	t.Run("PublisherHourlies", testPublisherHourliesExists)
	t.Run("PublisherSyncs", testPublisherSyncsExists)
	t.Run("ReportUpdates", testReportUpdatesExists)
	t.Run("RevenueDailies", testRevenueDailiesExists)
	t.Run("RevenueHourlies", testRevenueHourliesExists)
	t.Run("SchemaMigrations", testSchemaMigrationsExists)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesExists)
	t.Run("Targetings", testTargetingsExists)
	t.Run("Users", testUsersExists)
}

func TestFind(t *testing.T) {
	t.Run("BidCashings", testBidCashingsFind)
	t.Run("CompassPublisherTags", testCompassPublisherTagsFind)
	t.Run("Competitors", testCompetitorsFind)
	t.Run("Confiants", testConfiantsFind)
	t.Run("Configurations", testConfigurationsFind)
	t.Run("DemandDailies", testDemandDailiesFind)
	t.Run("DemandHourlies", testDemandHourliesFind)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsFind)
	t.Run("DemandPartners", testDemandPartnersFind)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesFind)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesFind)
	t.Run("Dpos", testDposFind)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsFind)
	t.Run("DpoRules", testDpoRulesFind)
	t.Run("Factors", testFactorsFind)
	t.Run("Floors", testFloorsFind)
	t.Run("GlobalFactors", testGlobalFactorsFind)
	t.Run("Histories", testHistoriesFind)
	t.Run("ID5Testings", testID5TestingsFind)
	t.Run("IiqDailies", testIiqDailiesFind)
	t.Run("IiqHourlies", testIiqHourliesFind)
	t.Run("IiqTestings", testIiqTestingsFind)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesFind)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesFind)
	t.Run("LoopingRatios", testLoopingRatiosFind)
	t.Run("MetadataInstances", testMetadataInstancesFind)
	t.Run("MetadataQueues", testMetadataQueuesFind)
	t.Run("NBDemandHourlies", testNBDemandHourliesFind)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesFind)
	t.Run("Pixalates", testPixalatesFind)
	t.Run("PriceFactorLogs", testPriceFactorLogsFind)
	t.Run("Publishers", testPublishersFind)
	t.Run("PublisherDailies", testPublisherDailiesFind)
	t.Run("PublisherDemands", testPublisherDemandsFind)
	t.Run("PublisherDomains", testPublisherDomainsFind)
	t.Run("PublisherHourlies", testPublisherHourliesFind)
	t.Run("PublisherSyncs", testPublisherSyncsFind)
	t.Run("ReportUpdates", testReportUpdatesFind)
	t.Run("RevenueDailies", testRevenueDailiesFind)
	t.Run("RevenueHourlies", testRevenueHourliesFind)
	t.Run("SchemaMigrations", testSchemaMigrationsFind)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesFind)
	t.Run("Targetings", testTargetingsFind)
	t.Run("Users", testUsersFind)
}

func TestBind(t *testing.T) {
	t.Run("BidCashings", testBidCashingsBind)
	t.Run("CompassPublisherTags", testCompassPublisherTagsBind)
	t.Run("Competitors", testCompetitorsBind)
	t.Run("Confiants", testConfiantsBind)
	t.Run("Configurations", testConfigurationsBind)
	t.Run("DemandDailies", testDemandDailiesBind)
	t.Run("DemandHourlies", testDemandHourliesBind)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsBind)
	t.Run("DemandPartners", testDemandPartnersBind)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesBind)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesBind)
	t.Run("Dpos", testDposBind)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsBind)
	t.Run("DpoRules", testDpoRulesBind)
	t.Run("Factors", testFactorsBind)
	t.Run("Floors", testFloorsBind)
	t.Run("GlobalFactors", testGlobalFactorsBind)
	t.Run("Histories", testHistoriesBind)
	t.Run("ID5Testings", testID5TestingsBind)
	t.Run("IiqDailies", testIiqDailiesBind)
	t.Run("IiqHourlies", testIiqHourliesBind)
	t.Run("IiqTestings", testIiqTestingsBind)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesBind)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesBind)
	t.Run("LoopingRatios", testLoopingRatiosBind)
	t.Run("MetadataInstances", testMetadataInstancesBind)
	t.Run("MetadataQueues", testMetadataQueuesBind)
	t.Run("NBDemandHourlies", testNBDemandHourliesBind)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesBind)
	t.Run("Pixalates", testPixalatesBind)
	t.Run("PriceFactorLogs", testPriceFactorLogsBind)
	t.Run("Publishers", testPublishersBind)
	t.Run("PublisherDailies", testPublisherDailiesBind)
	t.Run("PublisherDemands", testPublisherDemandsBind)
	t.Run("PublisherDomains", testPublisherDomainsBind)
	t.Run("PublisherHourlies", testPublisherHourliesBind)
	t.Run("PublisherSyncs", testPublisherSyncsBind)
	t.Run("ReportUpdates", testReportUpdatesBind)
	t.Run("RevenueDailies", testRevenueDailiesBind)
	t.Run("RevenueHourlies", testRevenueHourliesBind)
	t.Run("SchemaMigrations", testSchemaMigrationsBind)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesBind)
	t.Run("Targetings", testTargetingsBind)
	t.Run("Users", testUsersBind)
}

func TestOne(t *testing.T) {
	t.Run("BidCashings", testBidCashingsOne)
	t.Run("CompassPublisherTags", testCompassPublisherTagsOne)
	t.Run("Competitors", testCompetitorsOne)
	t.Run("Confiants", testConfiantsOne)
	t.Run("Configurations", testConfigurationsOne)
	t.Run("DemandDailies", testDemandDailiesOne)
	t.Run("DemandHourlies", testDemandHourliesOne)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsOne)
	t.Run("DemandPartners", testDemandPartnersOne)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesOne)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesOne)
	t.Run("Dpos", testDposOne)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsOne)
	t.Run("DpoRules", testDpoRulesOne)
	t.Run("Factors", testFactorsOne)
	t.Run("Floors", testFloorsOne)
	t.Run("GlobalFactors", testGlobalFactorsOne)
	t.Run("Histories", testHistoriesOne)
	t.Run("ID5Testings", testID5TestingsOne)
	t.Run("IiqDailies", testIiqDailiesOne)
	t.Run("IiqHourlies", testIiqHourliesOne)
	t.Run("IiqTestings", testIiqTestingsOne)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesOne)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesOne)
	t.Run("LoopingRatios", testLoopingRatiosOne)
	t.Run("MetadataInstances", testMetadataInstancesOne)
	t.Run("MetadataQueues", testMetadataQueuesOne)
	t.Run("NBDemandHourlies", testNBDemandHourliesOne)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesOne)
	t.Run("Pixalates", testPixalatesOne)
	t.Run("PriceFactorLogs", testPriceFactorLogsOne)
	t.Run("Publishers", testPublishersOne)
	t.Run("PublisherDailies", testPublisherDailiesOne)
	t.Run("PublisherDemands", testPublisherDemandsOne)
	t.Run("PublisherDomains", testPublisherDomainsOne)
	t.Run("PublisherHourlies", testPublisherHourliesOne)
	t.Run("PublisherSyncs", testPublisherSyncsOne)
	t.Run("ReportUpdates", testReportUpdatesOne)
	t.Run("RevenueDailies", testRevenueDailiesOne)
	t.Run("RevenueHourlies", testRevenueHourliesOne)
	t.Run("SchemaMigrations", testSchemaMigrationsOne)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesOne)
	t.Run("Targetings", testTargetingsOne)
	t.Run("Users", testUsersOne)
}

func TestAll(t *testing.T) {
	t.Run("BidCashings", testBidCashingsAll)
	t.Run("CompassPublisherTags", testCompassPublisherTagsAll)
	t.Run("Competitors", testCompetitorsAll)
	t.Run("Confiants", testConfiantsAll)
	t.Run("Configurations", testConfigurationsAll)
	t.Run("DemandDailies", testDemandDailiesAll)
	t.Run("DemandHourlies", testDemandHourliesAll)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsAll)
	t.Run("DemandPartners", testDemandPartnersAll)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesAll)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesAll)
	t.Run("Dpos", testDposAll)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsAll)
	t.Run("DpoRules", testDpoRulesAll)
	t.Run("Factors", testFactorsAll)
	t.Run("Floors", testFloorsAll)
	t.Run("GlobalFactors", testGlobalFactorsAll)
	t.Run("Histories", testHistoriesAll)
	t.Run("ID5Testings", testID5TestingsAll)
	t.Run("IiqDailies", testIiqDailiesAll)
	t.Run("IiqHourlies", testIiqHourliesAll)
	t.Run("IiqTestings", testIiqTestingsAll)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesAll)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesAll)
	t.Run("LoopingRatios", testLoopingRatiosAll)
	t.Run("MetadataInstances", testMetadataInstancesAll)
	t.Run("MetadataQueues", testMetadataQueuesAll)
	t.Run("NBDemandHourlies", testNBDemandHourliesAll)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesAll)
	t.Run("Pixalates", testPixalatesAll)
	t.Run("PriceFactorLogs", testPriceFactorLogsAll)
	t.Run("Publishers", testPublishersAll)
	t.Run("PublisherDailies", testPublisherDailiesAll)
	t.Run("PublisherDemands", testPublisherDemandsAll)
	t.Run("PublisherDomains", testPublisherDomainsAll)
	t.Run("PublisherHourlies", testPublisherHourliesAll)
	t.Run("PublisherSyncs", testPublisherSyncsAll)
	t.Run("ReportUpdates", testReportUpdatesAll)
	t.Run("RevenueDailies", testRevenueDailiesAll)
	t.Run("RevenueHourlies", testRevenueHourliesAll)
	t.Run("SchemaMigrations", testSchemaMigrationsAll)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesAll)
	t.Run("Targetings", testTargetingsAll)
	t.Run("Users", testUsersAll)
}

func TestCount(t *testing.T) {
	t.Run("BidCashings", testBidCashingsCount)
	t.Run("CompassPublisherTags", testCompassPublisherTagsCount)
	t.Run("Competitors", testCompetitorsCount)
	t.Run("Confiants", testConfiantsCount)
	t.Run("Configurations", testConfigurationsCount)
	t.Run("DemandDailies", testDemandDailiesCount)
	t.Run("DemandHourlies", testDemandHourliesCount)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsCount)
	t.Run("DemandPartners", testDemandPartnersCount)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesCount)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesCount)
	t.Run("Dpos", testDposCount)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsCount)
	t.Run("DpoRules", testDpoRulesCount)
	t.Run("Factors", testFactorsCount)
	t.Run("Floors", testFloorsCount)
	t.Run("GlobalFactors", testGlobalFactorsCount)
	t.Run("Histories", testHistoriesCount)
	t.Run("ID5Testings", testID5TestingsCount)
	t.Run("IiqDailies", testIiqDailiesCount)
	t.Run("IiqHourlies", testIiqHourliesCount)
	t.Run("IiqTestings", testIiqTestingsCount)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesCount)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesCount)
	t.Run("LoopingRatios", testLoopingRatiosCount)
	t.Run("MetadataInstances", testMetadataInstancesCount)
	t.Run("MetadataQueues", testMetadataQueuesCount)
	t.Run("NBDemandHourlies", testNBDemandHourliesCount)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesCount)
	t.Run("Pixalates", testPixalatesCount)
	t.Run("PriceFactorLogs", testPriceFactorLogsCount)
	t.Run("Publishers", testPublishersCount)
	t.Run("PublisherDailies", testPublisherDailiesCount)
	t.Run("PublisherDemands", testPublisherDemandsCount)
	t.Run("PublisherDomains", testPublisherDomainsCount)
	t.Run("PublisherHourlies", testPublisherHourliesCount)
	t.Run("PublisherSyncs", testPublisherSyncsCount)
	t.Run("ReportUpdates", testReportUpdatesCount)
	t.Run("RevenueDailies", testRevenueDailiesCount)
	t.Run("RevenueHourlies", testRevenueHourliesCount)
	t.Run("SchemaMigrations", testSchemaMigrationsCount)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesCount)
	t.Run("Targetings", testTargetingsCount)
	t.Run("Users", testUsersCount)
}

func TestHooks(t *testing.T) {
	t.Run("BidCashings", testBidCashingsHooks)
	t.Run("CompassPublisherTags", testCompassPublisherTagsHooks)
	t.Run("Competitors", testCompetitorsHooks)
	t.Run("Confiants", testConfiantsHooks)
	t.Run("Configurations", testConfigurationsHooks)
	t.Run("DemandDailies", testDemandDailiesHooks)
	t.Run("DemandHourlies", testDemandHourliesHooks)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsHooks)
	t.Run("DemandPartners", testDemandPartnersHooks)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesHooks)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesHooks)
	t.Run("Dpos", testDposHooks)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsHooks)
	t.Run("DpoRules", testDpoRulesHooks)
	t.Run("Factors", testFactorsHooks)
	t.Run("Floors", testFloorsHooks)
	t.Run("GlobalFactors", testGlobalFactorsHooks)
	t.Run("Histories", testHistoriesHooks)
	t.Run("ID5Testings", testID5TestingsHooks)
	t.Run("IiqDailies", testIiqDailiesHooks)
	t.Run("IiqHourlies", testIiqHourliesHooks)
	t.Run("IiqTestings", testIiqTestingsHooks)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesHooks)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesHooks)
	t.Run("LoopingRatios", testLoopingRatiosHooks)
	t.Run("MetadataInstances", testMetadataInstancesHooks)
	t.Run("MetadataQueues", testMetadataQueuesHooks)
	t.Run("NBDemandHourlies", testNBDemandHourliesHooks)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesHooks)
	t.Run("Pixalates", testPixalatesHooks)
	t.Run("PriceFactorLogs", testPriceFactorLogsHooks)
	t.Run("Publishers", testPublishersHooks)
	t.Run("PublisherDailies", testPublisherDailiesHooks)
	t.Run("PublisherDemands", testPublisherDemandsHooks)
	t.Run("PublisherDomains", testPublisherDomainsHooks)
	t.Run("PublisherHourlies", testPublisherHourliesHooks)
	t.Run("PublisherSyncs", testPublisherSyncsHooks)
	t.Run("ReportUpdates", testReportUpdatesHooks)
	t.Run("RevenueDailies", testRevenueDailiesHooks)
	t.Run("RevenueHourlies", testRevenueHourliesHooks)
	t.Run("SchemaMigrations", testSchemaMigrationsHooks)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesHooks)
	t.Run("Targetings", testTargetingsHooks)
	t.Run("Users", testUsersHooks)
}

func TestInsert(t *testing.T) {
	t.Run("BidCashings", testBidCashingsInsert)
	t.Run("BidCashings", testBidCashingsInsertWhitelist)
	t.Run("CompassPublisherTags", testCompassPublisherTagsInsert)
	t.Run("CompassPublisherTags", testCompassPublisherTagsInsertWhitelist)
	t.Run("Competitors", testCompetitorsInsert)
	t.Run("Competitors", testCompetitorsInsertWhitelist)
	t.Run("Confiants", testConfiantsInsert)
	t.Run("Confiants", testConfiantsInsertWhitelist)
	t.Run("Configurations", testConfigurationsInsert)
	t.Run("Configurations", testConfigurationsInsertWhitelist)
	t.Run("DemandDailies", testDemandDailiesInsert)
	t.Run("DemandDailies", testDemandDailiesInsertWhitelist)
	t.Run("DemandHourlies", testDemandHourliesInsert)
	t.Run("DemandHourlies", testDemandHourliesInsertWhitelist)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsInsert)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsInsertWhitelist)
	t.Run("DemandPartners", testDemandPartnersInsert)
	t.Run("DemandPartners", testDemandPartnersInsertWhitelist)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesInsert)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesInsertWhitelist)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesInsert)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesInsertWhitelist)
	t.Run("Dpos", testDposInsert)
	t.Run("Dpos", testDposInsertWhitelist)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsInsert)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsInsertWhitelist)
	t.Run("DpoRules", testDpoRulesInsert)
	t.Run("DpoRules", testDpoRulesInsertWhitelist)
	t.Run("Factors", testFactorsInsert)
	t.Run("Factors", testFactorsInsertWhitelist)
	t.Run("Floors", testFloorsInsert)
	t.Run("Floors", testFloorsInsertWhitelist)
	t.Run("GlobalFactors", testGlobalFactorsInsert)
	t.Run("GlobalFactors", testGlobalFactorsInsertWhitelist)
	t.Run("Histories", testHistoriesInsert)
	t.Run("Histories", testHistoriesInsertWhitelist)
	t.Run("ID5Testings", testID5TestingsInsert)
	t.Run("ID5Testings", testID5TestingsInsertWhitelist)
	t.Run("IiqDailies", testIiqDailiesInsert)
	t.Run("IiqDailies", testIiqDailiesInsertWhitelist)
	t.Run("IiqHourlies", testIiqHourliesInsert)
	t.Run("IiqHourlies", testIiqHourliesInsertWhitelist)
	t.Run("IiqTestings", testIiqTestingsInsert)
	t.Run("IiqTestings", testIiqTestingsInsertWhitelist)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesInsert)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesInsertWhitelist)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesInsert)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesInsertWhitelist)
	t.Run("LoopingRatios", testLoopingRatiosInsert)
	t.Run("LoopingRatios", testLoopingRatiosInsertWhitelist)
	t.Run("MetadataInstances", testMetadataInstancesInsert)
	t.Run("MetadataInstances", testMetadataInstancesInsertWhitelist)
	t.Run("MetadataQueues", testMetadataQueuesInsert)
	t.Run("MetadataQueues", testMetadataQueuesInsertWhitelist)
	t.Run("NBDemandHourlies", testNBDemandHourliesInsert)
	t.Run("NBDemandHourlies", testNBDemandHourliesInsertWhitelist)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesInsert)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesInsertWhitelist)
	t.Run("Pixalates", testPixalatesInsert)
	t.Run("Pixalates", testPixalatesInsertWhitelist)
	t.Run("PriceFactorLogs", testPriceFactorLogsInsert)
	t.Run("PriceFactorLogs", testPriceFactorLogsInsertWhitelist)
	t.Run("Publishers", testPublishersInsert)
	t.Run("Publishers", testPublishersInsertWhitelist)
	t.Run("PublisherDailies", testPublisherDailiesInsert)
	t.Run("PublisherDailies", testPublisherDailiesInsertWhitelist)
	t.Run("PublisherDemands", testPublisherDemandsInsert)
	t.Run("PublisherDemands", testPublisherDemandsInsertWhitelist)
	t.Run("PublisherDomains", testPublisherDomainsInsert)
	t.Run("PublisherDomains", testPublisherDomainsInsertWhitelist)
	t.Run("PublisherHourlies", testPublisherHourliesInsert)
	t.Run("PublisherHourlies", testPublisherHourliesInsertWhitelist)
	t.Run("PublisherSyncs", testPublisherSyncsInsert)
	t.Run("PublisherSyncs", testPublisherSyncsInsertWhitelist)
	t.Run("ReportUpdates", testReportUpdatesInsert)
	t.Run("ReportUpdates", testReportUpdatesInsertWhitelist)
	t.Run("RevenueDailies", testRevenueDailiesInsert)
	t.Run("RevenueDailies", testRevenueDailiesInsertWhitelist)
	t.Run("RevenueHourlies", testRevenueHourliesInsert)
	t.Run("RevenueHourlies", testRevenueHourliesInsertWhitelist)
	t.Run("SchemaMigrations", testSchemaMigrationsInsert)
	t.Run("SchemaMigrations", testSchemaMigrationsInsertWhitelist)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesInsert)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesInsertWhitelist)
	t.Run("Targetings", testTargetingsInsert)
	t.Run("Targetings", testTargetingsInsertWhitelist)
	t.Run("Users", testUsersInsert)
	t.Run("Users", testUsersInsertWhitelist)
}

func TestReload(t *testing.T) {
	t.Run("BidCashings", testBidCashingsReload)
	t.Run("CompassPublisherTags", testCompassPublisherTagsReload)
	t.Run("Competitors", testCompetitorsReload)
	t.Run("Confiants", testConfiantsReload)
	t.Run("Configurations", testConfigurationsReload)
	t.Run("DemandDailies", testDemandDailiesReload)
	t.Run("DemandHourlies", testDemandHourliesReload)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsReload)
	t.Run("DemandPartners", testDemandPartnersReload)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesReload)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesReload)
	t.Run("Dpos", testDposReload)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsReload)
	t.Run("DpoRules", testDpoRulesReload)
	t.Run("Factors", testFactorsReload)
	t.Run("Floors", testFloorsReload)
	t.Run("GlobalFactors", testGlobalFactorsReload)
	t.Run("Histories", testHistoriesReload)
	t.Run("ID5Testings", testID5TestingsReload)
	t.Run("IiqDailies", testIiqDailiesReload)
	t.Run("IiqHourlies", testIiqHourliesReload)
	t.Run("IiqTestings", testIiqTestingsReload)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesReload)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesReload)
	t.Run("LoopingRatios", testLoopingRatiosReload)
	t.Run("MetadataInstances", testMetadataInstancesReload)
	t.Run("MetadataQueues", testMetadataQueuesReload)
	t.Run("NBDemandHourlies", testNBDemandHourliesReload)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesReload)
	t.Run("Pixalates", testPixalatesReload)
	t.Run("PriceFactorLogs", testPriceFactorLogsReload)
	t.Run("Publishers", testPublishersReload)
	t.Run("PublisherDailies", testPublisherDailiesReload)
	t.Run("PublisherDemands", testPublisherDemandsReload)
	t.Run("PublisherDomains", testPublisherDomainsReload)
	t.Run("PublisherHourlies", testPublisherHourliesReload)
	t.Run("PublisherSyncs", testPublisherSyncsReload)
	t.Run("ReportUpdates", testReportUpdatesReload)
	t.Run("RevenueDailies", testRevenueDailiesReload)
	t.Run("RevenueHourlies", testRevenueHourliesReload)
	t.Run("SchemaMigrations", testSchemaMigrationsReload)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesReload)
	t.Run("Targetings", testTargetingsReload)
	t.Run("Users", testUsersReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("BidCashings", testBidCashingsReloadAll)
	t.Run("CompassPublisherTags", testCompassPublisherTagsReloadAll)
	t.Run("Competitors", testCompetitorsReloadAll)
	t.Run("Confiants", testConfiantsReloadAll)
	t.Run("Configurations", testConfigurationsReloadAll)
	t.Run("DemandDailies", testDemandDailiesReloadAll)
	t.Run("DemandHourlies", testDemandHourliesReloadAll)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsReloadAll)
	t.Run("DemandPartners", testDemandPartnersReloadAll)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesReloadAll)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesReloadAll)
	t.Run("Dpos", testDposReloadAll)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsReloadAll)
	t.Run("DpoRules", testDpoRulesReloadAll)
	t.Run("Factors", testFactorsReloadAll)
	t.Run("Floors", testFloorsReloadAll)
	t.Run("GlobalFactors", testGlobalFactorsReloadAll)
	t.Run("Histories", testHistoriesReloadAll)
	t.Run("ID5Testings", testID5TestingsReloadAll)
	t.Run("IiqDailies", testIiqDailiesReloadAll)
	t.Run("IiqHourlies", testIiqHourliesReloadAll)
	t.Run("IiqTestings", testIiqTestingsReloadAll)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesReloadAll)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesReloadAll)
	t.Run("LoopingRatios", testLoopingRatiosReloadAll)
	t.Run("MetadataInstances", testMetadataInstancesReloadAll)
	t.Run("MetadataQueues", testMetadataQueuesReloadAll)
	t.Run("NBDemandHourlies", testNBDemandHourliesReloadAll)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesReloadAll)
	t.Run("Pixalates", testPixalatesReloadAll)
	t.Run("PriceFactorLogs", testPriceFactorLogsReloadAll)
	t.Run("Publishers", testPublishersReloadAll)
	t.Run("PublisherDailies", testPublisherDailiesReloadAll)
	t.Run("PublisherDemands", testPublisherDemandsReloadAll)
	t.Run("PublisherDomains", testPublisherDomainsReloadAll)
	t.Run("PublisherHourlies", testPublisherHourliesReloadAll)
	t.Run("PublisherSyncs", testPublisherSyncsReloadAll)
	t.Run("ReportUpdates", testReportUpdatesReloadAll)
	t.Run("RevenueDailies", testRevenueDailiesReloadAll)
	t.Run("RevenueHourlies", testRevenueHourliesReloadAll)
	t.Run("SchemaMigrations", testSchemaMigrationsReloadAll)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesReloadAll)
	t.Run("Targetings", testTargetingsReloadAll)
	t.Run("Users", testUsersReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("BidCashings", testBidCashingsSelect)
	t.Run("CompassPublisherTags", testCompassPublisherTagsSelect)
	t.Run("Competitors", testCompetitorsSelect)
	t.Run("Confiants", testConfiantsSelect)
	t.Run("Configurations", testConfigurationsSelect)
	t.Run("DemandDailies", testDemandDailiesSelect)
	t.Run("DemandHourlies", testDemandHourliesSelect)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsSelect)
	t.Run("DemandPartners", testDemandPartnersSelect)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesSelect)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesSelect)
	t.Run("Dpos", testDposSelect)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsSelect)
	t.Run("DpoRules", testDpoRulesSelect)
	t.Run("Factors", testFactorsSelect)
	t.Run("Floors", testFloorsSelect)
	t.Run("GlobalFactors", testGlobalFactorsSelect)
	t.Run("Histories", testHistoriesSelect)
	t.Run("ID5Testings", testID5TestingsSelect)
	t.Run("IiqDailies", testIiqDailiesSelect)
	t.Run("IiqHourlies", testIiqHourliesSelect)
	t.Run("IiqTestings", testIiqTestingsSelect)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesSelect)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesSelect)
	t.Run("LoopingRatios", testLoopingRatiosSelect)
	t.Run("MetadataInstances", testMetadataInstancesSelect)
	t.Run("MetadataQueues", testMetadataQueuesSelect)
	t.Run("NBDemandHourlies", testNBDemandHourliesSelect)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesSelect)
	t.Run("Pixalates", testPixalatesSelect)
	t.Run("PriceFactorLogs", testPriceFactorLogsSelect)
	t.Run("Publishers", testPublishersSelect)
	t.Run("PublisherDailies", testPublisherDailiesSelect)
	t.Run("PublisherDemands", testPublisherDemandsSelect)
	t.Run("PublisherDomains", testPublisherDomainsSelect)
	t.Run("PublisherHourlies", testPublisherHourliesSelect)
	t.Run("PublisherSyncs", testPublisherSyncsSelect)
	t.Run("ReportUpdates", testReportUpdatesSelect)
	t.Run("RevenueDailies", testRevenueDailiesSelect)
	t.Run("RevenueHourlies", testRevenueHourliesSelect)
	t.Run("SchemaMigrations", testSchemaMigrationsSelect)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesSelect)
	t.Run("Targetings", testTargetingsSelect)
	t.Run("Users", testUsersSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("BidCashings", testBidCashingsUpdate)
	t.Run("CompassPublisherTags", testCompassPublisherTagsUpdate)
	t.Run("Competitors", testCompetitorsUpdate)
	t.Run("Confiants", testConfiantsUpdate)
	t.Run("Configurations", testConfigurationsUpdate)
	t.Run("DemandDailies", testDemandDailiesUpdate)
	t.Run("DemandHourlies", testDemandHourliesUpdate)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsUpdate)
	t.Run("DemandPartners", testDemandPartnersUpdate)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesUpdate)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesUpdate)
	t.Run("Dpos", testDposUpdate)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsUpdate)
	t.Run("DpoRules", testDpoRulesUpdate)
	t.Run("Factors", testFactorsUpdate)
	t.Run("Floors", testFloorsUpdate)
	t.Run("GlobalFactors", testGlobalFactorsUpdate)
	t.Run("Histories", testHistoriesUpdate)
	t.Run("ID5Testings", testID5TestingsUpdate)
	t.Run("IiqDailies", testIiqDailiesUpdate)
	t.Run("IiqHourlies", testIiqHourliesUpdate)
	t.Run("IiqTestings", testIiqTestingsUpdate)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesUpdate)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesUpdate)
	t.Run("LoopingRatios", testLoopingRatiosUpdate)
	t.Run("MetadataInstances", testMetadataInstancesUpdate)
	t.Run("MetadataQueues", testMetadataQueuesUpdate)
	t.Run("NBDemandHourlies", testNBDemandHourliesUpdate)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesUpdate)
	t.Run("Pixalates", testPixalatesUpdate)
	t.Run("PriceFactorLogs", testPriceFactorLogsUpdate)
	t.Run("Publishers", testPublishersUpdate)
	t.Run("PublisherDailies", testPublisherDailiesUpdate)
	t.Run("PublisherDemands", testPublisherDemandsUpdate)
	t.Run("PublisherDomains", testPublisherDomainsUpdate)
	t.Run("PublisherHourlies", testPublisherHourliesUpdate)
	t.Run("PublisherSyncs", testPublisherSyncsUpdate)
	t.Run("ReportUpdates", testReportUpdatesUpdate)
	t.Run("RevenueDailies", testRevenueDailiesUpdate)
	t.Run("RevenueHourlies", testRevenueHourliesUpdate)
	t.Run("SchemaMigrations", testSchemaMigrationsUpdate)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesUpdate)
	t.Run("Targetings", testTargetingsUpdate)
	t.Run("Users", testUsersUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("BidCashings", testBidCashingsSliceUpdateAll)
	t.Run("CompassPublisherTags", testCompassPublisherTagsSliceUpdateAll)
	t.Run("Competitors", testCompetitorsSliceUpdateAll)
	t.Run("Confiants", testConfiantsSliceUpdateAll)
	t.Run("Configurations", testConfigurationsSliceUpdateAll)
	t.Run("DemandDailies", testDemandDailiesSliceUpdateAll)
	t.Run("DemandHourlies", testDemandHourliesSliceUpdateAll)
	t.Run("DemandParnterPlacements", testDemandParnterPlacementsSliceUpdateAll)
	t.Run("DemandPartners", testDemandPartnersSliceUpdateAll)
	t.Run("DemandPartnerDailies", testDemandPartnerDailiesSliceUpdateAll)
	t.Run("DemandPartnerHourlies", testDemandPartnerHourliesSliceUpdateAll)
	t.Run("Dpos", testDposSliceUpdateAll)
	t.Run("DpoAutomationLogs", testDpoAutomationLogsSliceUpdateAll)
	t.Run("DpoRules", testDpoRulesSliceUpdateAll)
	t.Run("Factors", testFactorsSliceUpdateAll)
	t.Run("Floors", testFloorsSliceUpdateAll)
	t.Run("GlobalFactors", testGlobalFactorsSliceUpdateAll)
	t.Run("Histories", testHistoriesSliceUpdateAll)
	t.Run("ID5Testings", testID5TestingsSliceUpdateAll)
	t.Run("IiqDailies", testIiqDailiesSliceUpdateAll)
	t.Run("IiqHourlies", testIiqHourliesSliceUpdateAll)
	t.Run("IiqTestings", testIiqTestingsSliceUpdateAll)
	t.Run("ImpressionLogDailies", testImpressionLogDailiesSliceUpdateAll)
	t.Run("ImpressionLogHourlies", testImpressionLogHourliesSliceUpdateAll)
	t.Run("LoopingRatios", testLoopingRatiosSliceUpdateAll)
	t.Run("MetadataInstances", testMetadataInstancesSliceUpdateAll)
	t.Run("MetadataQueues", testMetadataQueuesSliceUpdateAll)
	t.Run("NBDemandHourlies", testNBDemandHourliesSliceUpdateAll)
	t.Run("NBSupplyHourlies", testNBSupplyHourliesSliceUpdateAll)
	t.Run("Pixalates", testPixalatesSliceUpdateAll)
	t.Run("PriceFactorLogs", testPriceFactorLogsSliceUpdateAll)
	t.Run("Publishers", testPublishersSliceUpdateAll)
	t.Run("PublisherDailies", testPublisherDailiesSliceUpdateAll)
	t.Run("PublisherDemands", testPublisherDemandsSliceUpdateAll)
	t.Run("PublisherDomains", testPublisherDomainsSliceUpdateAll)
	t.Run("PublisherHourlies", testPublisherHourliesSliceUpdateAll)
	t.Run("PublisherSyncs", testPublisherSyncsSliceUpdateAll)
	t.Run("ReportUpdates", testReportUpdatesSliceUpdateAll)
	t.Run("RevenueDailies", testRevenueDailiesSliceUpdateAll)
	t.Run("RevenueHourlies", testRevenueHourliesSliceUpdateAll)
	t.Run("SchemaMigrations", testSchemaMigrationsSliceUpdateAll)
	t.Run("SellersJSONHistories", testSellersJSONHistoriesSliceUpdateAll)
	t.Run("Targetings", testTargetingsSliceUpdateAll)
	t.Run("Users", testUsersSliceUpdateAll)
}
