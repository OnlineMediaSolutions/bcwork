definitions:
  bulk.FactorUpdateRequest:
    properties:
      country:
        type: string
      device:
        type: string
      domain:
        type: string
      factor:
        type: number
      publisher:
        type: string
      rule_id:
        type: string
    type: object
  bulk.FloorUpdateResponse:
    properties:
      status:
        type: string
    type: object
  bulk.GlobalFactorRequest:
    properties:
      key:
        type: string
      publisher_id:
        type: string
      value:
        type: number
    type: object
  core.AdsTxtGetBaseOptions:
    properties:
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.AdsTxtGetGroupByDPFilter:
    properties:
      account_manager_full_name:
        items:
          type: string
        type: array
      campaign_manager_full_name:
        items:
          type: string
        type: array
      demand_manager_full_name:
        items:
          type: string
        type: array
      demand_partner_name:
        items:
          type: string
        type: array
      demand_status:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      domain_status:
        items:
          type: string
        type: array
      dp_enabled:
        type: boolean
      media_type:
        items:
          type: string
        type: array
      mirror_publisher_id:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
    type: object
  core.AdsTxtGetGroupByDPOptions:
    properties:
      filter:
        $ref: '#/definitions/core.AdsTxtGetGroupByDPFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.AdsTxtGetMainFilter:
    properties:
      account_manager_full_name:
        items:
          type: string
        type: array
      campaign_manager_full_name:
        items:
          type: string
        type: array
      demand_manager_full_name:
        items:
          type: string
        type: array
      demand_partner_name_extended:
        items:
          type: string
        type: array
      demand_status:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      domain_status:
        items:
          type: string
        type: array
      is_required:
        type: boolean
      media_type:
        items:
          type: string
        type: array
      mirror_publisher_id:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
      status:
        items:
          type: string
        type: array
    type: object
  core.AdsTxtGetMainOptions:
    properties:
      filter:
        $ref: '#/definitions/core.AdsTxtGetMainFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.BidCachingFilter:
    properties:
      active:
        type: boolean
      country:
        items:
          type: string
        type: array
      device:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      publisher:
        items:
          type: string
        type: array
    type: object
  core.Competitor:
    properties:
      name:
        type: string
      position:
        type: string
      type:
        type: string
      url:
        type: string
    required:
    - name
    - position
    - type
    - url
    type: object
  core.CompetitorFilter:
    properties:
      name:
        items:
          type: string
        type: array
      position:
        items:
          type: string
        type: array
      type:
        items:
          type: string
        type: array
      url:
        items:
          type: string
        type: array
    type: object
  core.CompetitorUpdateRequest:
    properties:
      name:
        type: string
      position:
        type: string
      type:
        type: string
      url:
        type: string
    required:
    - name
    - position
    - type
    - url
    type: object
  core.ConfiantFilter:
    properties:
      confiant_key:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
      rate:
        items:
          type: string
        type: array
    type: object
  core.ConfigurationFilter:
    properties:
      key:
        items:
          type: string
        type: array
      value:
        items:
          type: string
        type: array
    type: object
  core.ConfigurationPayload:
    properties:
      filter:
        $ref: '#/definitions/core.ConfigurationFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.ConfigurationRequest:
    properties:
      description:
        type: string
      key:
        type: string
      value:
        type: string
    required:
    - key
    - value
    type: object
  core.DPApiFilter:
    properties:
      demand_partner:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
    type: object
  core.DPOFactorOptions:
    properties:
      filter:
        $ref: '#/definitions/core.DPORuleFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.DPORuleFilter:
    properties:
      active:
        type: boolean
      country:
        items:
          type: string
        type: array
      demand_partner_id:
        items:
          type: string
        type: array
      device_type:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      factor:
        items:
          type: string
        type: array
      publisher:
        items:
          type: string
        type: array
      rule_id:
        items:
          type: string
        type: array
    type: object
  core.DemandPartnerGetFilter:
    properties:
      active:
        type: boolean
      automation:
        type: boolean
      demand_partner_id:
        items:
          type: string
        type: array
      demand_partner_name:
        items:
          type: string
        type: array
    type: object
  core.DemandPartnerGetOptions:
    properties:
      filter:
        $ref: '#/definitions/core.DemandPartnerGetFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.ExportTagsRequest:
    properties:
      add_gdpr:
        type: boolean
      ids:
        items:
          type: integer
        type: array
    type: object
  core.FactorFilter:
    properties:
      active:
        type: boolean
      country:
        items:
          type: string
        type: array
      device:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      publisher:
        items:
          type: string
        type: array
    type: object
  core.FloorFilter:
    properties:
      active:
        type: boolean
      country:
        items:
          type: string
        type: array
      device:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      publisher:
        items:
          type: string
        type: array
    type: object
  core.GetBidCachingOptions:
    properties:
      filter:
        $ref: '#/definitions/core.BidCachingFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetCompetitorOptions:
    properties:
      filter:
        $ref: '#/definitions/core.CompetitorFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetConfiantOptions:
    properties:
      filter:
        $ref: '#/definitions/core.ConfiantFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetDPApiOptions:
    properties:
      date_stamp:
        type: string
      demand_partner:
        type: string
      endDate:
        type: string
      filter:
        $ref: '#/definitions/core.DPApiFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      startDate:
        type: string
    type: object
  core.GetFactorOptions:
    properties:
      filter:
        $ref: '#/definitions/core.FactorFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetFloorOptions:
    properties:
      filter:
        $ref: '#/definitions/core.FloorFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetGlobalFactorOptions:
    properties:
      filter:
        $ref: '#/definitions/core.GlobalFactorFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetPixalateOptions:
    properties:
      filter:
        $ref: '#/definitions/core.PixalateFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetPublisherDemandOptions:
    properties:
      filter:
        $ref: '#/definitions/core.PublisherDemandFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetPublisherDetailsOptions:
    properties:
      filter:
        $ref: '#/definitions/core.PublisherDetailsFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetPublisherDomainOptions:
    properties:
      filter:
        $ref: '#/definitions/core.PublisherDomainFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetPublisherOptions:
    properties:
      filter:
        $ref: '#/definitions/core.PublisherFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GetRefreshCacheOptions:
    properties:
      filter:
        $ref: '#/definitions/core.RefreshCacheFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.GlobalFactor:
    properties:
      created_at:
        type: string
      key:
        type: string
      publisher_id:
        type: string
      updated_at:
        type: string
      value:
        type: number
    type: object
  core.GlobalFactorFilter:
    properties:
      key:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
      value:
        items:
          type: string
        type: array
    type: object
  core.GlobalFactorRequest:
    properties:
      key:
        type: string
      publisher_id:
        type: string
      value:
        minimum: 0
        type: number
    type: object
  core.HistoryFilter:
    properties:
      action:
        items:
          type: string
        type: array
      demand_partner_id:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      entity_id:
        items:
          type: string
        type: array
      item:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
      subject:
        items:
          type: string
        type: array
      user_id:
        items:
          type: integer
        type: array
    type: object
  core.HistoryOptions:
    properties:
      filter:
        $ref: '#/definitions/core.HistoryFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.MetadataUpdateRequest:
    properties:
      data: {}
      key:
        type: string
      version:
        type: string
    type: object
  core.PixalateFilter:
    properties:
      active:
        type: boolean
      domain:
        items:
          type: string
        type: array
      pixalate_key:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
      rate:
        items:
          type: string
        type: array
    type: object
  core.PublisherDemandFilter:
    properties:
      active:
        type: boolean
      ads_txt_status:
        type: boolean
      demand:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
    type: object
  core.PublisherDemandResponse:
    properties:
      active:
        type: boolean
      ads_txt_status:
        type: boolean
      created_at:
        type: string
      demand_partner_id:
        type: string
      demand_partner_name:
        type: string
      domain:
        type: string
      publisher_id:
        type: string
      updated_at:
        type: string
    type: object
  core.PublisherDetailsFilter:
    properties:
      account_manager:
        items:
          type: string
        type: array
      automation:
        type: boolean
      domain:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
    type: object
  core.PublisherDomainFilter:
    properties:
      automation:
        type: boolean
      domain:
        items:
          type: string
        type: array
      gpp_target:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
    type: object
  core.PublisherFilter:
    properties:
      account_manager_id:
        items:
          type: string
        type: array
      campaign_manager_id:
        items:
          type: string
        type: array
      created_at:
        $ref: '#/definitions/filter.DatesFilter'
      media_buyer_id:
        items:
          type: string
        type: array
      name:
        items:
          type: string
        type: array
      office_location:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
      search:
        type: string
    type: object
  core.RefreshCacheFilter:
    properties:
      active:
        type: boolean
      country:
        items:
          type: string
        type: array
      device:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      publisher:
        items:
          type: string
        type: array
    type: object
  core.SeatOwnerGetFilter:
    properties:
      certification_authority_id:
        items:
          type: string
        type: array
      id:
        items:
          type: string
        type: array
      publisher_account:
        items:
          type: string
        type: array
      seat_owner_domain:
        items:
          type: string
        type: array
      seat_owner_name:
        items:
          type: string
        type: array
    type: object
  core.SeatOwnerGetOptions:
    properties:
      filter:
        $ref: '#/definitions/core.SeatOwnerGetFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.TargetingFilter:
    properties:
      browser:
        items:
          type: string
        type: array
      country:
        items:
          type: string
        type: array
      device_type:
        items:
          type: string
        type: array
      domain:
        items:
          type: string
        type: array
      os:
        items:
          type: string
        type: array
      placement_type:
        items:
          type: string
        type: array
      price_model:
        items:
          type: string
        type: array
      publisher_id:
        items:
          type: string
        type: array
      status:
        items:
          type: string
        type: array
      unit_size:
        items:
          type: string
        type: array
    type: object
  core.TargetingOptions:
    properties:
      filter:
        $ref: '#/definitions/core.TargetingFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  core.UserFilter:
    properties:
      address:
        items:
          type: string
        type: array
      email:
        items:
          type: string
        type: array
      enabled:
        type: boolean
      first_name:
        items:
          type: string
        type: array
      last_name:
        items:
          type: string
        type: array
      organization_name:
        items:
          type: string
        type: array
      phone:
        items:
          type: string
        type: array
      role:
        items:
          type: string
        type: array
      types:
        items:
          type: string
        type: array
    type: object
  core.UserOptions:
    properties:
      filter:
        $ref: '#/definitions/core.UserFilter'
      order:
        items:
          $ref: '#/definitions/order.Field'
        type: array
      pagination:
        $ref: '#/definitions/pagination.Pagination'
      selector:
        type: string
    type: object
  dto.AdjustRequest:
    properties:
      domain:
        items:
          type: string
        type: array
      value:
        type: number
    required:
    - domain
    - value
    type: object
  dto.AdsTxt:
    properties:
      account_manager_full_name:
        $ref: '#/definitions/null.String'
      account_manager_id:
        $ref: '#/definitions/null.String'
      action:
        type: string
      added:
        description: count of added lines
        type: integer
      ads_txt_line:
        type: string
      campaign_manager_full_name:
        $ref: '#/definitions/null.String'
      campaign_manager_id:
        $ref: '#/definitions/null.String'
      cursor_id:
        type: integer
      demand_manager_full_name:
        $ref: '#/definitions/null.String'
      demand_manager_id:
        $ref: '#/definitions/null.String'
      demand_partner_connection_id:
        $ref: '#/definitions/null.Int'
      demand_partner_id:
        type: string
      demand_partner_name:
        type: string
      demand_partner_name_extended:
        description: like Amazon - Amazon or OMS - Direct
        type: string
      demand_status:
        type: string
      domain:
        type: string
      domain_status:
        type: string
      dp_enabled:
        description: dp is ready to go live
        type: boolean
      error_message:
        $ref: '#/definitions/null.String'
      id:
        type: integer
      is_demand_partner_active:
        type: boolean
      is_required:
        type: boolean
      last_scanned_at:
        type: string
      media_type:
        items:
          type: string
        type: array
      mirror_publisher_id:
        $ref: '#/definitions/null.String'
      mirror_publisher_name:
        $ref: '#/definitions/null.String'
      publisher_id:
        type: string
      publisher_name:
        type: string
      score:
        type: integer
      seat_owner_name:
        type: string
      status:
        type: string
      total:
        description: total amount of lines
        type: integer
    type: object
  dto.AdsTxtGroupByDPResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.AdsTxtGroupedByDP'
        type: array
      total:
        type: integer
    type: object
  dto.AdsTxtGroupedByDP:
    properties:
      account_manager_full_name:
        $ref: '#/definitions/null.String'
      account_manager_id:
        $ref: '#/definitions/null.String'
      action:
        type: string
      added:
        description: count of added lines
        type: integer
      ads_txt_line:
        type: string
      campaign_manager_full_name:
        $ref: '#/definitions/null.String'
      campaign_manager_id:
        $ref: '#/definitions/null.String'
      cursor_id:
        type: integer
      demand_manager_full_name:
        $ref: '#/definitions/null.String'
      demand_manager_id:
        $ref: '#/definitions/null.String'
      demand_partner_connection_id:
        $ref: '#/definitions/null.Int'
      demand_partner_id:
        type: string
      demand_partner_name:
        type: string
      demand_partner_name_extended:
        description: like Amazon - Amazon or OMS - Direct
        type: string
      demand_status:
        type: string
      domain:
        type: string
      domain_status:
        type: string
      dp_enabled:
        description: dp is ready to go live
        type: boolean
      error_message:
        $ref: '#/definitions/null.String'
      grouped_lines:
        items:
          $ref: '#/definitions/dto.AdsTxt'
        type: array
      id:
        type: integer
      is_demand_partner_active:
        type: boolean
      is_required:
        type: boolean
      last_scanned_at:
        type: string
      media_type:
        items:
          type: string
        type: array
      mirror_publisher_id:
        $ref: '#/definitions/null.String'
      mirror_publisher_name:
        $ref: '#/definitions/null.String'
      publisher_id:
        type: string
      publisher_name:
        type: string
      score:
        type: integer
      seat_owner_name:
        type: string
      status:
        type: string
      total:
        description: total amount of lines
        type: integer
    type: object
  dto.AdsTxtResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.AdsTxt'
        type: array
      total:
        type: integer
    type: object
  dto.AdsTxtUpdateRequest:
    properties:
      demand_partner_id:
        type: string
      demand_status:
        type: string
      domain:
        items:
          type: string
        minItems: 1
        type: array
      domain_status:
        type: string
    required:
    - domain
    type: object
  dto.BidCaching:
    properties:
      active:
        type: boolean
      bid_caching:
        type: integer
      browser:
        type: string
      control_percentage:
        type: number
      country:
        type: string
      created_at:
        type: string
      demand_partner_id:
        type: string
      device:
        type: string
      domain:
        type: string
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
      rule_id:
        type: string
      updated_at:
        type: string
    required:
    - publisher
    type: object
  dto.BidCachingUpdateRequest:
    properties:
      bid_caching:
        type: integer
      browser:
        type: string
      control_percentage:
        type: number
      country:
        type: string
      device:
        type: string
      domain:
        type: string
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
      rule_id:
        type: string
    required:
    - rule_id
    type: object
  dto.BlockGetRequest:
    properties:
      domain:
        type: string
      publisher:
        type: string
      types:
        items:
          type: string
        type: array
    type: object
  dto.BlockUpdateRequest:
    properties:
      badv:
        items:
          type: string
        type: array
      bcat:
        items:
          type: string
        type: array
      domain:
        type: string
      publisher:
        type: string
    required:
    - publisher
    type: object
  dto.BooleanReplacement:
    properties:
      "false":
        type: string
      "true":
        type: string
    type: object
  dto.Changes:
    properties:
      id:
        type: string
      new_value: {}
      old_value: {}
      property:
        type: string
    type: object
  dto.Column:
    properties:
      boolean_replacement:
        $ref: '#/definitions/dto.BooleanReplacement'
      display_name:
        type: string
      multiply:
        type: number
      name:
        type: string
      style:
        type: string
    type: object
  dto.Confiant:
    properties:
      confiant_key:
        type: string
      created_at:
        type: string
      domain:
        type: string
      publisher_id:
        type: string
      rate:
        type: number
      updated_at:
        type: string
    type: object
  dto.ConfiantUpdateRequest:
    properties:
      confiant_key:
        type: string
      domain:
        type: string
      publisher_id:
        type: string
      rate:
        type: number
    required:
    - publisher_id
    type: object
  dto.DPORuleUpdateRequest:
    properties:
      active:
        type: boolean
      browser:
        type: string
      country:
        type: string
      demand_partner_id:
        type: string
      device_type:
        type: string
      domain:
        type: string
      factor:
        minimum: 0
        type: number
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
      rule_id:
        type: string
    required:
    - factor
    type: object
  dto.DemandPartner:
    properties:
      active:
        type: boolean
      approval_before_going_live:
        type: boolean
      approval_process:
        type: string
      automation:
        type: boolean
      automation_name:
        type: string
      comments:
        type: string
      connections:
        items:
          $ref: '#/definitions/dto.DemandPartnerConnection'
        type: array
      created_at:
        type: string
      demand_partner_id:
        type: string
      demand_partner_name:
        type: string
      dp_blocks:
        type: string
      integration_type:
        items:
          type: string
        type: array
      is_approval_needed:
        type: boolean
      is_include:
        type: boolean
      manager_full_name:
        type: string
      manager_id:
        type: integer
      media_type_list:
        items:
          type: string
        type: array
      poc_email:
        type: string
      poc_name:
        type: string
      score:
        type: integer
      seat_owner_id:
        type: integer
      seat_owner_name:
        type: string
      threshold:
        type: number
      updated_at:
        type: string
    required:
    - demand_partner_name
    - manager_id
    type: object
  dto.DemandPartnerChild:
    properties:
      ads_txt_line:
        type: string
      certification_authority_id:
        type: string
      created_at:
        type: string
      dp_child_name:
        type: string
      dp_connection_id:
        type: integer
      dp_domain:
        type: string
      id:
        type: integer
      is_direct:
        type: boolean
      is_required_for_ads_txt:
        type: boolean
      line_name:
        type: string
      publisher_account:
        type: string
      updated_at:
        type: string
    required:
    - dp_child_name
    - dp_domain
    - publisher_account
    type: object
  dto.DemandPartnerConnection:
    properties:
      ads_txt_line:
        type: string
      certification_authority_id:
        type: string
      children:
        items:
          $ref: '#/definitions/dto.DemandPartnerChild'
        type: array
      created_at:
        type: string
      demand_partner_id:
        type: string
      dp_domain:
        type: string
      id:
        type: integer
      is_direct:
        type: boolean
      is_required_for_ads_txt:
        type: boolean
      line_name:
        type: string
      media_type:
        items:
          type: string
        type: array
      publisher_account:
        type: string
      updated_at:
        type: string
    required:
    - dp_domain
    - publisher_account
    type: object
  dto.DownloadRequest:
    properties:
      columns:
        items:
          $ref: '#/definitions/dto.Column'
        type: array
      data:
        items:
          items:
            type: integer
          type: array
        type: array
      file_format:
        type: string
      filename_prefix:
        type: string
      request:
        $ref: '#/definitions/dto.Request'
    type: object
  dto.DpiApi:
    properties:
      counter:
        type: integer
      date_stamp:
        type: string
      demand_partner:
        type: string
      domain:
        type: string
      last_full_day:
        type: string
      last_updated:
        type: string
      revenue:
        type: number
      sold_imps:
        type: integer
      updated_at:
        type: string
    type: object
  dto.Factor:
    properties:
      active:
        type: boolean
      browser:
        type: string
      country:
        type: string
      device:
        type: string
      domain:
        type: string
      factor:
        type: number
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
      publisher_name:
        type: string
      rule_id:
        type: string
    type: object
  dto.FactorUpdateRequest:
    properties:
      browser:
        type: string
      country:
        type: string
      device:
        type: string
      domain:
        type: string
      factor:
        type: number
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
    type: object
  dto.Floor:
    properties:
      active:
        type: boolean
      browser:
        type: string
      country:
        type: string
      device:
        type: string
      domain:
        type: string
      floor:
        type: number
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
      publisher_name:
        type: string
      rule_id:
        type: string
    type: object
  dto.FloorUpdateRequest:
    properties:
      active:
        type: boolean
      browser:
        type: string
      country:
        type: string
      device:
        type: string
      domain:
        type: string
      floor:
        type: number
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
      rule_id:
        type: string
    type: object
  dto.History:
    properties:
      action:
        type: string
      children:
        items:
          $ref: '#/definitions/dto.Changes'
        type: array
      date:
        type: string
      demand_partner_name:
        type: string
      id:
        type: integer
      item:
        type: string
      subject:
        type: string
      user_full_name:
        type: string
    type: object
  dto.Ips:
    properties:
      date:
        type: string
      ip:
        type: string
      price:
        type: number
    type: object
  dto.Pixalate:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      domain:
        type: string
      pixalate_key:
        type: string
      publisher_id:
        type: string
      rate:
        type: number
      updated_at:
        type: string
    type: object
  dto.PixalateUpdateRequest:
    properties:
      active:
        type: boolean
      domain:
        type: string
      publisher_id:
        type: string
      rate:
        type: number
    required:
    - publisher_id
    type: object
  dto.PriceOverrideRequest:
    properties:
      domain:
        type: string
      ips:
        items:
          $ref: '#/definitions/dto.Ips'
        type: array
    type: object
  dto.Publisher:
    properties:
      account_manager_full_name:
        type: string
      account_manager_id:
        type: string
      bid_caching:
        items:
          $ref: '#/definitions/dto.BidCaching'
        type: array
      campaign_manager_full_name:
        type: string
      campaign_manager_id:
        type: string
      confiant:
        $ref: '#/definitions/dto.Confiant'
      created_at:
        type: string
      domains:
        items:
          type: string
        type: array
      integration_type:
        description: validate:"integrationType"
        items:
          type: string
        type: array
      is_direct:
        type: boolean
      latest_timestamp:
        type: integer
      media_buyer_full_name:
        type: string
      media_buyer_id:
        type: string
      media_type:
        description: validate:"mediaType"
        items:
          type: string
        type: array
      name:
        type: string
      office_location:
        type: string
      pause_timestamp:
        type: integer
      pixalate:
        $ref: '#/definitions/dto.Pixalate'
      publisher_id:
        type: string
      reactivate_timestamp:
        type: integer
      refresh_cache:
        items:
          $ref: '#/definitions/dto.RefreshCache'
        type: array
      start_timestamp:
        type: integer
      status:
        type: string
    type: object
  dto.PublisherCreateValues:
    properties:
      account_manager_id:
        type: string
      campaign_manager_id:
        type: string
      integration_type:
        description: validate:"integrationType"
        items:
          type: string
        type: array
      is_direct:
        type: boolean
      media_buyer_id:
        type: string
      media_type:
        description: validate:"mediaType"
        items:
          type: string
        type: array
      name:
        type: string
      office_location:
        type: string
      status:
        type: string
    required:
    - name
    type: object
  dto.PublisherDetail:
    properties:
      account_manager_full_name:
        type: string
      account_manager_id:
        type: string
      activity_status:
        type: string
      automation:
        type: boolean
      bid_caching:
        items:
          $ref: '#/definitions/dto.BidCaching'
        type: array
      confiant:
        $ref: '#/definitions/dto.Confiant'
      domain:
        type: string
      gpp_target:
        type: number
      name:
        type: string
      pixalate:
        $ref: '#/definitions/dto.Pixalate'
      publisher_id:
        type: string
      refresh_cache:
        items:
          $ref: '#/definitions/dto.RefreshCache'
        type: array
    type: object
  dto.PublisherDomain:
    properties:
      automation:
        type: boolean
      bid_caching:
        items:
          $ref: '#/definitions/dto.BidCaching'
        type: array
      confiant:
        $ref: '#/definitions/dto.Confiant'
      created_at:
        type: string
      domain:
        type: string
      gpp_target:
        type: number
      integration_type:
        items:
          type: string
        type: array
      is_direct:
        type: boolean
      is_direct_publisher:
        type: boolean
      mirror_publisher_id:
        type: string
      pixalate:
        $ref: '#/definitions/dto.Pixalate'
      publisher_id:
        type: string
      publisher_name:
        type: string
      refresh_cache:
        items:
          $ref: '#/definitions/dto.RefreshCache'
        type: array
      updated_at:
        type: string
    type: object
  dto.PublisherDomainData:
    properties:
      ads_txt_status:
        type: boolean
      domain:
        type: string
      pubId:
        type: string
    type: object
  dto.PublisherDomainRequest:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.PublisherDomainData'
        type: array
      demand_partner_id:
        type: string
    type: object
  dto.PublisherDomainUpdateRequest:
    properties:
      automation:
        type: boolean
      domain:
        type: string
      gpp_target:
        type: number
      integration_type:
        description: validate:"integrationType"
        items:
          type: string
        type: array
      is_direct:
        type: boolean
      mirror_publisher_id:
        type: string
      publisher_id:
        type: string
    required:
    - domain
    - publisher_id
    type: object
  dto.RefreshCache:
    properties:
      active:
        type: boolean
      browser:
        type: string
      country:
        type: string
      created_at:
        type: string
      demand_partner_id:
        type: string
      device:
        type: string
      domain:
        type: string
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
      refresh_cache:
        type: integer
      rule_id:
        type: string
      updated_at:
        type: string
    type: object
  dto.RefreshCacheUpdRequest:
    properties:
      refresh_cache:
        type: integer
      rule_id:
        type: string
    type: object
  dto.RefreshCacheUpdateRequest:
    properties:
      browser:
        type: string
      country:
        type: string
      device:
        type: string
      domain:
        type: string
      os:
        type: string
      placement_type:
        type: string
      publisher:
        type: string
      refresh_cache:
        type: integer
      rule_id:
        type: string
    type: object
  dto.Request:
    properties:
      body:
        items:
          type: integer
        type: array
      type:
        type: string
    type: object
  dto.SearchRequest:
    properties:
      query:
        type: string
      section_type:
        type: string
    type: object
  dto.SearchResult:
    properties:
      domain:
        type: string
      publisher_id:
        type: string
      publisher_name:
        type: string
    type: object
  dto.Tags:
    properties:
      id:
        type: integer
      tag:
        type: string
    type: object
  dto.Targeting:
    properties:
      browser:
        items:
          type: string
        type: array
      country:
        items:
          type: string
        type: array
      daily_cap:
        type: integer
      device_type:
        items:
          type: string
        type: array
      domain:
        type: string
      id:
        type: integer
      kv:
        additionalProperties:
          type: string
        type: object
      os:
        items:
          type: string
        type: array
      placement_type:
        type: string
      price_model:
        type: string
      publisher_id:
        type: string
      publisher_name:
        type: string
      rule_id:
        type: string
      status:
        type: string
      unit_size:
        type: string
      value:
        type: number
    required:
    - domain
    - publisher_id
    - unit_size
    type: object
  dto.UpdatePublisherValues:
    properties:
      account_manager_id:
        type: string
      campaign_manager_id:
        type: string
      integration_type:
        description: validate:"integrationType"
        items:
          type: string
        type: array
      is_direct:
        type: boolean
      media_buyer_id:
        type: string
      media_type:
        description: validate:"mediaType"
        items:
          type: string
        type: array
      name:
        type: string
      office_location:
        type: string
      pause_timestamp:
        type: integer
      reactivate_timestamp:
        type: integer
      start_timestamp:
        type: integer
      status:
        type: string
    type: object
  dto.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      disabled_at:
        type: string
      email:
        type: string
      enabled:
        type: boolean
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      organization_name:
        type: string
      phone:
        type: string
      role:
        type: string
      types:
        items:
          type: string
        type: array
    required:
    - first_name
    - last_name
    - organization_name
    type: object
  dto.UsersByTypes:
    properties:
      am:
        items:
          $ref: '#/definitions/dto.userByType'
        type: array
      cm:
        items:
          $ref: '#/definitions/dto.userByType'
        type: array
      mb:
        items:
          $ref: '#/definitions/dto.userByType'
        type: array
    type: object
  dto.userByType:
    properties:
      fullname:
        type: string
      id:
        type: integer
    type: object
  filter.DatesFilter:
    properties:
      from:
        type: string
      to:
        type: string
    type: object
  null.Int:
    properties:
      int:
        type: integer
      valid:
        type: boolean
    type: object
  null.String:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
  order.Field:
    properties:
      data: {}
      desc:
        type: boolean
      name:
        type: string
    type: object
  pagination.Pagination:
    properties:
      page:
        type: integer
      page_size:
        type: integer
    type: object
  rest.BidCachingUpdateResponse:
    properties:
      status:
        type: string
    type: object
  rest.CompetitorUpdateResponse:
    properties:
      status:
        type: string
    type: object
  rest.DemandFactorUpdateRequest:
    properties:
      demand_partner:
        type: string
      factor:
        type: number
    type: object
  rest.DemandFactorUpdateRespose:
    properties:
      status:
        description: 'in: body'
        type: string
    type: object
  rest.DemandReportGetRequest:
    type: object
  rest.DemandReportGetResponse:
    type: object
  rest.FactorUpdateResponse:
    properties:
      status:
        type: string
    type: object
  rest.FixedPriceUpdateRequest:
    properties:
      domain:
        type: string
      mobile:
        type: boolean
      price:
        type: number
      publisher:
        type: string
    type: object
  rest.FixedPriceUpdateRespose:
    properties:
      status:
        description: 'in: body'
        type: string
    type: object
  rest.FloorUpdateResponse:
    properties:
      status:
        type: string
    type: object
  rest.IiqTestingGetRequest:
    type: object
  rest.IiqTestingGetResponse:
    type: object
  rest.PublisherCountResponse:
    properties:
      count:
        type: integer
      status:
        type: string
    type: object
  rest.PublisherNewResponse:
    properties:
      publisher_id:
        type: string
      status:
        type: string
    type: object
  rest.PublisherReportGetRequest:
    type: object
  rest.PublisherReportGetResponse:
    type: object
  rest.PublisherUpdateRequest:
    properties:
      publisher_id:
        type: string
      updates:
        $ref: '#/definitions/dto.UpdatePublisherValues'
    type: object
  rest.PublisherUpdateResponse:
    properties:
      status:
        type: string
    type: object
  rest.TargetingTagsResponse:
    properties:
      message:
        type: string
      status:
        type: string
      tags:
        items:
          $ref: '#/definitions/dto.Tags'
        type: array
    type: object
  utils.BaseResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact:
    email: support@gutsy.me
    name: Brightcom Support
    url: http://www.nanoook.com/support
  description: API for OMS.
  title: Swagger OMS API
  version: "1.0"
paths:
  /adjust/factor:
    post:
      consumes:
      - application/json
      description: Update Factor based on Domain
      parameters:
      - description: Factor update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.AdjustRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Adjust
  /adjust/floor:
    post:
      consumes:
      - application/json
      description: Update Floor based on Domain
      parameters:
      - description: Floor update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.AdjustRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Adjust
  /ads_txt/am:
    post:
      consumes:
      - application/json
      description: Get ads.txt AM table.
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.AdsTxtGetBaseOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AdsTxt'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - AdsTxt
  /ads_txt/cm:
    post:
      consumes:
      - application/json
      description: Get ads.txt CM table.
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.AdsTxtGetBaseOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AdsTxt'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - AdsTxt
  /ads_txt/filter:
    get:
      description: Get available filters with data for ads txt.
      parameters:
      - description: Filter Name
        in: query
        name: filter_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - AdsTxt
  /ads_txt/group_by_dp:
    post:
      consumes:
      - application/json
      description: Get ads.txt group by DP table.
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.AdsTxtGetGroupByDPOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AdsTxtGroupByDPResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - AdsTxt
  /ads_txt/main:
    post:
      consumes:
      - application/json
      description: Get ads.txt main table.
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.AdsTxtGetMainOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AdsTxtResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - AdsTxt
  /ads_txt/mb:
    post:
      consumes:
      - application/json
      description: Get ads.txt MB table.
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.AdsTxtGetBaseOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AdsTxt'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - AdsTxt
  /ads_txt/update:
    post:
      consumes:
      - application/json
      description: Update ads.txt.
      parameters:
      - description: AdsTxt
        in: body
        name: adstxt
        required: true
        schema:
          $ref: '#/definitions/dto.AdsTxtUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - AdsTxt
  /bid_caching/delete:
    delete:
      consumes:
      - application/json
      description: Delete bid chaching.
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - BidCaching
  /bid_caching/get:
    post:
      consumes:
      - application/json
      description: Get bid_caching setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetBidCachingOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BidCaching'
      security:
      - ApiKeyAuth: []
      tags:
      - BidCaching
  /bid_caching/set:
    post:
      consumes:
      - application/json
      description: Create BidCaching setup
      parameters:
      - description: BidCaching create Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.BidCachingUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.BidCachingUpdateResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - BidCaching
  /bid_caching/update:
    post:
      consumes:
      - application/json
      description: Update BidCaching setup
      parameters:
      - description: BidCaching update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.BidCachingUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - BidCaching
  /block:
    post:
      consumes:
      - application/json
      description: Update bidder addomain and categories blocks.
      parameters:
      - description: Block update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.BlockUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - MetaData
  /block/get:
    post:
      consumes:
      - application/json
      description: Get publisher block list (bcat and badv) setup
      parameters:
      - description: Block update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.BlockGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - MetaData
  /bulk/dpo:
    post:
      consumes:
      - application/json
      description: Update DPO setup in bulk (publisher, factor and demand_partner_id
        fields are mandatory)
      parameters:
      - description: DPO update Options
        in: body
        name: options
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.DPORuleUpdateRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Bulk
  /bulk/factor:
    post:
      consumes:
      - application/json
      description: Update Factor setup in bulk (publisher, factor, device and country
        fields are mandatory)
      parameters:
      - description: Factor update Options
        in: body
        name: options
        required: true
        schema:
          items:
            $ref: '#/definitions/bulk.FactorUpdateRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Bulk
  /bulk/floor:
    post:
      consumes:
      - application/json
      description: Update Floor setup in bulk (publisher, floor, device and country
        fields are mandatory)
      parameters:
      - description: Floor update Options
        in: body
        name: options
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.FloorUpdateRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bulk.FloorUpdateResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Bulk
  /bulk/global/factor:
    post:
      consumes:
      - application/json
      description: Update Global Factor Fees in bulk
      parameters:
      - description: Global Factor update Options
        in: body
        name: options
        required: true
        schema:
          items:
            $ref: '#/definitions/bulk.GlobalFactorRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Bulk
  /competitor:
    post:
      consumes:
      - application/json
      description: Update Competitor setup (name is mandatory, url is mandatory)
      parameters:
      - description: Competitor update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.CompetitorUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.CompetitorUpdateResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Competitor
  /competitor/get:
    post:
      consumes:
      - application/json
      description: Get Competitor setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetCompetitorOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.Competitor'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Competitor
  /confiant:
    post:
      consumes:
      - application/json
      description: Update and enable Confiant setup (publisher is mandatory, domain
        is optional)
      parameters:
      - description: Confiant update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.ConfiantUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Confiant
  /confiant/get:
    post:
      consumes:
      - application/json
      description: Get confiant setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetConfiantOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Confiant'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Confiant
  /config:
    post:
      consumes:
      - application/json
      description: Update Factor setup (publisher is mandatory, domain is mandatory)
      parameters:
      - description: Factor update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.ConfigurationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Configuration
  /config/get:
    post:
      consumes:
      - application/json
      description: Get all configuration from DB
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.ConfigurationPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Configuration
  /demand/factor:
    post:
      consumes:
      - application/json
      description: Update new bidder demand factor for demand partner.
      parameters:
      - description: DemandFactor update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/rest.DemandFactorUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.DemandFactorUpdateRespose'
      security:
      - ApiKeyAuth: []
      tags:
      - MetaData
  /download:
    post:
      consumes:
      - application/json
      description: Download body data as file according to format in request. Data
        should be passed as array of json objects which have same structure
      parameters:
      - description: request
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.DownloadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      tags:
      - Download
  /dp-api-report:
    post:
      consumes:
      - application/json
      description: Get dpi-report  demand partners report by date range
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetDPApiOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.DpiApi'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Dp API
  /dp-api-report/demandPartners:
    post:
      consumes:
      - application/json
      description: Get dpi-report demand partners
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.DpiApi'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Dp API
  /dp/get:
    post:
      consumes:
      - application/json
      description: Get demand partners.
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.DemandPartnerGetOptions'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - DemandPartner
  /dp/seat_owner/get:
    post:
      consumes:
      - application/json
      description: Get seat owners for demand partners.
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.SeatOwnerGetOptions'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - DemandPartner
  /dp/set:
    post:
      consumes:
      - application/json
      description: Create new demand partner.
      parameters:
      - description: DemandPartner
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.DemandPartner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - DemandPartner
  /dp/update:
    post:
      consumes:
      - application/json
      description: Update demand partner.
      parameters:
      - description: DemandPartner
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.DemandPartner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - DemandPartner
  /dpo/delete:
    delete:
      consumes:
      - application/json
      description: Delete demand partner optimization rule for publisher.
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - DPO
  /dpo/get:
    post:
      consumes:
      - application/json
      description: Get demand partner optimization rules for publisher.
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.DPOFactorOptions'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - DPO
  /dpo/set:
    post:
      consumes:
      - application/json
      description: Update demand partner optimization rule for a publisher.
      parameters:
      - description: Demand Partner Optimization update rule
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.DPORuleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DPORuleUpdateRequest'
      security:
      - ApiKeyAuth: []
      tags:
      - DPO
  /dpo/update:
    get:
      description: Update demand partner optimization rule by rule id..
      parameters:
      - description: rule ID
        in: query
        name: rid
        required: true
        type: string
      - description: factor (0-100)
        in: query
        name: factor
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - DPO
  /factor:
    post:
      consumes:
      - application/json
      description: Update Factor setup (publisher is mandatory, domain is mandatory)
      parameters:
      - description: Factor update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.FactorUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.FactorUpdateResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Factor
  /factor/delete:
    delete:
      consumes:
      - application/json
      description: soft delete factor from Factor table and deletes it from metadata_queue
        table
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.FactorUpdateResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Factor
  /factor/get:
    post:
      consumes:
      - application/json
      description: Get factor setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetFactorOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Factor'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Factor
  /floor:
    post:
      consumes:
      - application/json
      description: Update Floor setup (publisher, floor, device and country fields
        are mandatory)
      parameters:
      - description: Floor update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.FloorUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Floor
  /floor/delete:
    delete:
      consumes:
      - application/json
      description: soft delete floor from Floor table and deletes it from metadata_queue
        table
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.FloorUpdateResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Floor
  /floor/get:
    post:
      consumes:
      - application/json
      description: Get floor setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetFloorOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Floor'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Floor
  /global/factor:
    post:
      consumes:
      - application/json
      description: Update Global Factors Fees
      parameters:
      - description: Global Factor update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GlobalFactorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Global Factor
  /global/factor/get:
    post:
      consumes:
      - application/json
      description: Get confiant setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetGlobalFactorOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.GlobalFactor'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Global Factor
  /history/get:
    post:
      consumes:
      - application/json
      description: Get history data.
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.HistoryOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.History'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - History
  /metadata/update:
    post:
      consumes:
      - application/json
      description: Update new bidder metadata.
      parameters:
      - description: Metadata update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.MetadataUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - MetaData
  /ping:
    get:
      consumes:
      - application/json
      description: Check Health of Service
      produces:
      - text/html
      responses: {}
      tags:
      - Health
  /pixalate:
    post:
      consumes:
      - application/json
      description: Update and enable Pixalate setup (publisher is mandatory, domain
        is optional)
      parameters:
      - description: Pixalate update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.PixalateUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Pixalate
  /pixalate/delete:
    delete:
      consumes:
      - application/json
      description: Delete Pixalate - soft delete.
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - Pixalate
  /pixalate/get:
    post:
      consumes:
      - application/json
      description: Get Pixalate setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetPixalateOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Pixalate'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Pixalate
  /price/fixed:
    get:
      consumes:
      - application/json
      description: Get fixed price rates
      produces:
      - text/html
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - MetaData
    post:
      consumes:
      - application/json
      description: Update javascript tag guaranteed price
      parameters:
      - description: FixedPrice update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/rest.FixedPriceUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.FixedPriceUpdateRespose'
      security:
      - ApiKeyAuth: []
      tags:
      - MetaData
  /price/override:
    post:
      consumes:
      - application/json
      description: set bid factor per user IP - valid for only 8 hours
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.PriceOverrideRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Price Override
  /publisher/count:
    post:
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetPublisherOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.PublisherCountResponse'
      security:
      - ApiKeyAuth: []
      summary: Count publishers
      tags:
      - publisher
  /publisher/demand/get:
    post:
      consumes:
      - application/json
      description: Get PublisherDemandResponse List
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetPublisherDemandOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.PublisherDemandResponse'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Publisher Demand Domain
  /publisher/demand/udpate:
    post:
      consumes:
      - application/json
      description: Get PublisherDemandResponse List
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.PublisherDomainRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/core.PublisherDemandResponse'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Publisher Demand Domain
  /publisher/details/get:
    post:
      consumes:
      - application/json
      description: Get Publishers with information about domains setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetPublisherDetailsOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.PublisherDetail'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - publisher
  /publisher/domain:
    post:
      consumes:
      - application/json
      description: Update and enable Publisher Domain setup (publisher is mandatory,
        domain is optional)
      parameters:
      - description: Publisher Domain update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.PublisherDomainUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Publisher Domain
  /publisher/domain/get:
    post:
      consumes:
      - application/json
      description: Get Publisher Domain setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetPublisherDomainOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.PublisherDomain'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Publisher Domain
  /publisher/get:
    post:
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetPublisherOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Publisher'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Count publishers
      tags:
      - publisher
  /publisher/new:
    post:
      description: Create a publisher
      parameters:
      - description: create publisher values
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.PublisherCreateValues'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.PublisherNewResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - publisher
  /publisher/update:
    post:
      description: Updates publisher fields
      parameters:
      - description: Publisher Update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/rest.PublisherUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.PublisherUpdateResponse'
      security:
      - ApiKeyAuth: []
      summary: Update publisher.
      tags:
      - publisher
  /refresh_cache/delete:
    delete:
      consumes:
      - application/json
      description: Delete refresh  cache.
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - RefreshCache
  /refresh_cache/get:
    post:
      consumes:
      - application/json
      description: Get refresh cache setup
      parameters:
      - description: options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.GetRefreshCacheOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RefreshCache'
      security:
      - ApiKeyAuth: []
      tags:
      - RefreshCache
  /refresh_cache/set:
    post:
      consumes:
      - application/json
      description: Create Refresh Cache setup
      parameters:
      - description: Refresh Cache create Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshCacheUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - RefreshCache
  /refresh_cache/update:
    post:
      consumes:
      - application/json
      description: Update Refresh Cache setup
      parameters:
      - description: Refresh Cache update Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshCacheUpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - RefreshCache
  /report/demand:
    get:
      consumes:
      - application/json
      description: fetching challenges based on filter with pagination,order and selected
        fields
      parameters:
      - description: DemandReport Get Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/rest.DemandReportGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.DemandReportGetResponse'
      security:
      - ApiKeyAuth: []
      summary: Get DemandReports.
      tags:
      - DemandReport
  /report/iiq/hourly:
    post:
      consumes:
      - application/json
      description: fetching challenges based on filter with pagination,order and selected
        fields
      parameters:
      - description: IiqTesting Get Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/rest.IiqTestingGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.IiqTestingGetResponse'
      security:
      - ApiKeyAuth: []
      summary: Get IiqTestings.
      tags:
      - IiqTesting
  /report/publisher:
    get:
      consumes:
      - application/json
      description: fetching challenges based on filter with pagination,order and selected
        fields
      parameters:
      - description: PublisherReport Get Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/rest.PublisherReportGetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.PublisherReportGetResponse'
      security:
      - ApiKeyAuth: []
      summary: Get PublisherReports.
      tags:
      - PublisherReport
  /search:
    post:
      consumes:
      - application/json
      description: Search for publisher_id, publisher_name, domain, demand partner
        name.
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.SearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/dto.SearchResult'
              type: array
            type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Search
  /targeting/get:
    post:
      consumes:
      - application/json
      description: Get targeting data.
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.TargetingOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Targeting'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - Targeting
  /targeting/set:
    post:
      consumes:
      - application/json
      description: Create new targeting.
      parameters:
      - description: Targeting
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.Targeting'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Targeting
  /targeting/tags:
    post:
      consumes:
      - application/json
      description: Export one or multiple tags.
      parameters:
      - description: Export tags request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/core.ExportTagsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.TargetingTagsResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Targeting
  /targeting/update:
    post:
      consumes:
      - application/json
      description: Update targeting in terms of cost model, value and status.
      parameters:
      - description: Targeting
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/dto.Targeting'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Targeting
  /user/by_types:
    get:
      consumes:
      - application/json
      description: Get users by types data.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UsersByTypes'
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /user/get:
    post:
      consumes:
      - application/json
      description: Get users data.
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/core.UserOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.User'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /user/info:
    get:
      consumes:
      - application/json
      description: Get user info.
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /user/set:
    post:
      consumes:
      - application/json
      description: Create new user.
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /user/update:
    post:
      consumes:
      - application/json
      description: Update user.
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.BaseResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: oms-worker-api-key
    type: apiKey
swagger: "2.0"
