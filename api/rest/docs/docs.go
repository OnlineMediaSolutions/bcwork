// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/block": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update bidder addomain and categories blocks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "parameters": [
                    {
                        "description": "Block update Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.BlockUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.BlockUpdateRespose"
                        }
                    }
                }
            }
        },
        "/block/get": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get publisher block list (bcat and badv) setup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "parameters": [
                    {
                        "description": "Block update Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.BlockGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.BlockUpdateRespose"
                        }
                    }
                }
            }
        },
        "/challenge/get": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "fetching challenges based on filter with pagination,order and selected fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublisherReport"
                ],
                "summary": "Get PublisherReports.",
                "parameters": [
                    {
                        "description": "PublisherReport Get Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.PublisherReportGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PublisherReportGetResponse"
                        }
                    }
                }
            }
        },
        "/confiant": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get confiant setup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "metadata"
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update and enable Confiant setup (publisher is mandatory, domain is optional)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "parameters": [
                    {
                        "description": "Confiant update Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.ConfiantUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ConfiantUpdateRespose"
                        }
                    }
                }
            }
        },
        "/demand/factor": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update new bidder demand factor for demand partner.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "parameters": [
                    {
                        "description": "DemandFactor update Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.DemandFactorUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.DemandFactorUpdateRespose"
                        }
                    }
                }
            }
        },
        "/dpo/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete demand partner optimization rule for publisher.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dpo"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "rule ID",
                        "name": "rid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/dpo/get": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get demand partner optimization rules for publisher.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dpo"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "demand partner ID",
                        "name": "dpid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/dpo/set": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update demand partner optimization rule for a publisher.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dpo"
                ],
                "parameters": [
                    {
                        "description": "Demand Partner Optimization update rule",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.DemandPartnerOptimizationUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.DemandPartnerOptimizationUpdateResponse"
                        }
                    }
                }
            }
        },
        "/dpo/update": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update demand partner optimization rule by rule id..",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dpo"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "rule ID",
                        "name": "rid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "factor (0-100)",
                        "name": "factor",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/metadata/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update new bidder metadata.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "parameters": [
                    {
                        "description": "Metadata update Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.MetadataUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.MetadataUpdateRespose"
                        }
                    }
                }
            }
        },
        "/price/factor": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update new bidder price factor.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "parameters": [
                    {
                        "description": "PriceFactor update Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.PriceFactorUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PriceFactorUpdateRespose"
                        }
                    }
                }
            }
        },
        "/price/fixed": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get fixed price rates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "metadata"
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update javascript tag guaranteed price",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "parameters": [
                    {
                        "description": "FixedPrice update Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.FixedPriceUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.FixedPriceUpdateRespose"
                        }
                    }
                }
            }
        },
        "/publisher/count": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publisher"
                ],
                "summary": "Count publishers",
                "parameters": [
                    {
                        "description": "options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.GetPublisherOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PublisherCountResponse"
                        }
                    }
                }
            }
        },
        "/publisher/get": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publisher"
                ],
                "summary": "Count publishers",
                "parameters": [
                    {
                        "description": "options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.GetPublisherOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/core.Publisher"
                            }
                        }
                    }
                }
            }
        },
        "/publisher/new": {
            "post": {
                "description": "Create a publisher",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publisher"
                ],
                "parameters": [
                    {
                        "description": "create publisher values",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.PublisherCreateValues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PublisherNewResponse"
                        }
                    }
                }
            }
        },
        "/publisher/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates publisher fields",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publisher"
                ],
                "summary": "Update publisher.",
                "parameters": [
                    {
                        "description": "Publisher Update Options",
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.PublisherUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PublisherUpdateResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.Confiant": {
            "type": "object",
            "properties": {
                "confiant_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "publisher_id": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "core.GetPublisherOptions": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/core.PublisherFilter"
                },
                "order": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.Field"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/pagination.Pagination"
                },
                "selector": {
                    "type": "string"
                }
            }
        },
        "core.Publisher": {
            "type": "object",
            "properties": {
                "account_manager_id": {
                    "type": "string"
                },
                "campaign_manager_id": {
                    "type": "string"
                },
                "confiant": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Confiant"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "media_buyer_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "office_location": {
                    "type": "string"
                },
                "pause_timestamp": {
                    "type": "integer"
                },
                "publisher_id": {
                    "type": "string"
                },
                "reactivate_timestamp": {
                    "type": "integer"
                },
                "start_timestamp": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "core.PublisherCreateValues": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "core.PublisherFilter": {
            "type": "object",
            "properties": {
                "account_manager_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "campaign_manager_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/filter.DatesFilter"
                },
                "media_buyer_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "office_location": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publisher_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "search": {
                    "type": "string"
                }
            }
        },
        "core.UpdatePublisherValues": {
            "type": "object",
            "properties": {
                "account_manager_id": {
                    "type": "string"
                },
                "campaign_manager_id": {
                    "type": "string"
                },
                "media_buyer_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "office_location": {
                    "type": "string"
                },
                "pause_timestamp": {
                    "type": "integer"
                },
                "reactivate_timestamp": {
                    "type": "integer"
                },
                "start_timestamp": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "filter.DatesFilter": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "order.Field": {
            "type": "object",
            "properties": {
                "data": {},
                "desc": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pagination.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                }
            }
        },
        "rest.BlockGetRequest": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "rest.BlockUpdateRequest": {
            "type": "object",
            "properties": {
                "badv": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bcat": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                }
            }
        },
        "rest.BlockUpdateRespose": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "in: body",
                    "type": "string"
                }
            }
        },
        "rest.ConfiantUpdateRequest": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                }
            }
        },
        "rest.ConfiantUpdateRespose": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "in: body",
                    "type": "string"
                }
            }
        },
        "rest.DemandFactorUpdateRequest": {
            "type": "object",
            "properties": {
                "demand_partner": {
                    "type": "string"
                },
                "factor": {
                    "type": "number"
                }
            }
        },
        "rest.DemandFactorUpdateRespose": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "in: body",
                    "type": "string"
                }
            }
        },
        "rest.DemandPartnerOptimizationUpdateRequest": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "demand_partner_id": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "factor": {
                    "type": "number"
                },
                "os": {
                    "type": "string"
                },
                "placement_type": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                }
            }
        },
        "rest.DemandPartnerOptimizationUpdateResponse": {
            "type": "object",
            "properties": {
                "rule_id": {
                    "type": "string"
                },
                "status": {
                    "description": "in: body",
                    "type": "string"
                }
            }
        },
        "rest.DemandReportGetRequest": {
            "type": "object"
        },
        "rest.DemandReportGetResponse": {
            "type": "object"
        },
        "rest.FixedPriceUpdateRequest": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "mobile": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "publisher": {
                    "type": "string"
                }
            }
        },
        "rest.FixedPriceUpdateRespose": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "in: body",
                    "type": "string"
                }
            }
        },
        "rest.IiqTestingGetRequest": {
            "type": "object"
        },
        "rest.IiqTestingGetResponse": {
            "type": "object"
        },
        "rest.MetadataUpdateRequest": {
            "type": "object",
            "properties": {
                "data": {},
                "key": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "rest.MetadataUpdateRespose": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "in: body",
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "rest.PriceFactorUpdateRequest": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "factor": {
                    "type": "number"
                },
                "mobile": {
                    "type": "boolean"
                },
                "publisher": {
                    "type": "string"
                }
            }
        },
        "rest.PriceFactorUpdateRespose": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "in: body",
                    "type": "string"
                }
            }
        },
        "rest.PublisherCountResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.PublisherNewResponse": {
            "type": "object",
            "properties": {
                "publisher_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.PublisherReportGetRequest": {
            "type": "object"
        },
        "rest.PublisherReportGetResponse": {
            "type": "object"
        },
        "rest.PublisherUpdateRequest": {
            "type": "object",
            "properties": {
                "publisher_id": {
                    "type": "string"
                },
                "updates": {
                    "$ref": "#/definitions/core.UpdatePublisherValues"
                }
            }
        },
        "rest.PublisherUpdateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
